apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
{{- $runAsUser := default 999 .Values.securityContext.runAsUser }}
{{- $runAsGroup := default (default 999 .Values.podSecurityContext.fsGroup) .Values.securityContext.runAsGroup }}
spec:
  serviceName: {{ include "mongodb.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "mongodb.serviceAccountName" . }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.enabled }}
      initContainers:
        - name: mongodb-keyfile-setup
          image: "{{ .Values.initContainers.keyfile.image }}:{{ .Values.initContainers.keyfile.tag }}"
          imagePullPolicy: {{ .Values.initContainers.keyfile.pullPolicy }}
          command:
            - /bin/sh
            - -c
          args:
            - |-
              set -eu
              mkdir -p /keyfile-dst
              cp /keyfile-src/keyfile /keyfile-dst/keyfile
              chown {{ $runAsUser }}:{{ $runAsGroup }} /keyfile-dst/keyfile
              chmod 400 /keyfile-dst/keyfile
          volumeMounts:
            - name: replicaset-key-src
              mountPath: /keyfile-src
              readOnly: true
            - name: replicaset-key
              mountPath: /keyfile-dst
      {{- end }}
      containers:
        - name: mongodb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --bind_ip_all
            - --replSet={{ include "mongodb.replicaSetName" . }}
            {{- if .Values.auth.enabled }}
            - --auth
            - --keyFile=/etc/mongodb/replicaset/keyfile
            {{- end }}
          ports:
            - name: mongodb
              containerPort: 27017
          {{- if .Values.auth.enabled }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ include "mongodb.fullname" . }}-auth{{ end }}
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ include "mongodb.fullname" . }}-auth{{ end }}
                  key: password
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data/db
            {{- if .Values.auth.enabled }}
            - name: replicaset-key
              mountPath: /etc/mongodb/replicaset
              readOnly: true
            {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - |-
                  set -eo pipefail
                  HOST_FQDN="$(hostname -f)"
                  URI="mongodb://${HOST_FQDN}:27017/admin"
                  if [ -n "${MONGO_INITDB_ROOT_USERNAME:-}" ]; then
                    mongosh "${URI}" -u "${MONGO_INITDB_ROOT_USERNAME}" -p "${MONGO_INITDB_ROOT_PASSWORD}" --quiet --eval 'rs.status()'
                  else
                    mongosh "${URI}" --quiet --eval 'rs.status()'
                  fi
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - |-
                  set -eo pipefail
                  HOST_FQDN="$(hostname -f)"
                  URI="mongodb://${HOST_FQDN}:27017/admin"
                  if [ -n "${MONGO_INITDB_ROOT_USERNAME:-}" ]; then
                    mongosh "${URI}" -u "${MONGO_INITDB_ROOT_USERNAME}" -p "${MONGO_INITDB_ROOT_PASSWORD}" --quiet --eval 'db.runCommand({ ping: 1 })'
                  else
                    mongosh "${URI}" --quiet --eval 'db.runCommand({ ping: 1 })'
                  fi
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or (not .Values.persistence.enabled) .Values.auth.enabled }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        {{- if .Values.auth.enabled }}
        - name: replicaset-key
          emptyDir: {}
        - name: replicaset-key-src
          secret:
            secretName: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ include "mongodb.fullname" . }}-auth{{ end }}
            items:
              - key: replicaSetKey
                path: keyfile
            defaultMode: 256
        {{- end }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "mongodb.labels" . | nindent 10 }}
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
